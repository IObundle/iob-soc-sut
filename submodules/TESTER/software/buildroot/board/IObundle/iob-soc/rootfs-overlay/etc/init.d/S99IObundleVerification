#!/bin/sh
# Tester verification script (similar verification sequence of tester firmware in baremetal)

### Defines
# Uart special chars
STX=2 # start text
ETX=3 # end text
EOT=4 # end of transission
ENQ=5 # enquiry
ACK=6 # acklowledge
FTX=7 # transmit file
FRX=8 # receive file

### Configuration
SUT_UART=/dev/...
INIT_MEM=0


### Functions

wait_for_char() {
	WAIT_FOR_CHAR="$1"
	while true; do
	    # Read a single character from the specified device
	    read -n 1 CHAR < "$SUT_UART"

	    # Check if the read character is the terminating character
	    if [ "$CHAR" == "$WAIT_FOR_CHAR" ]; then
		break
	    fi
	done
}

print_sut_msgs() {
	WAIT_FOR_CHAR="EOT"
	while true; do
	    # Read a single character from the specified device
	    read -n 1 CHAR < "$SUT_UART"

	    # Check if the read character is the terminating character
	    if [ "$CHAR" == "$WAIT_FOR_CHAR" ]; then
		break
	    fi

	    echo -n $CHAR
	done
}


### Main verification sequence
# TODO Receive data from console via Ethernet

echo -e "\n\n[Tester]: Hello from tester!\n\n"

# TODO Write values to regfileif of SUT

# TODO Place test pattern in GPIO output

# TODO Program PFSM and ILA monitor

# Init SUT via UART
echo "[Tester]: Initializing SUT via UART..."
# Wait for ENQ signal from SUT
wait_for_char $ENQ
# Send ACk to sut
echo "$ACK" > $SUT_UART

echo "[Tester]: Received SUT UART enquiry and sent acknowledge."


if [ "$INIT_MEM" -eq 1 ]; then
	echo "[Tester]: SUT memory is not initalized. Waiting for firmware transfer request from SUT..."
	wait_for_char $FRX
	#TODO Receive filename
	echo "[Tester]: Received firmware transfer request with filename: ..."
	echo "[Tester]: Sending transfer request to console..."
	#TODO Receive sut firmware from console
	echo "[Tester]: SUT firmware obtained. Transfering it to SUT via UART..."
	#TODO Send firmware to SUT
	#TODO Ignore firmware readback
	echo "[Tester]: Finished receiving firmware readback."
fi # INIT_MEM=1

#TODO Send byte stream via AXI stream

#TODO Disable ILA trigger and print samples

#TODO Send Test data to SUT via ethernet

echo -e "\n[Tester]: Reading SUT messages..."
echo -e "[Tester]: #### Messages received from SUT: ####\n"
print_sut_msgs
echo -e "\n[Tester]: #### End of messages received from SUT ####\n"

#TODO Receive test.log from SUT

#TODO terminate UART connection with SUT

#TODO Read data from SUT regfileif

#TODO Read GPIO from SUT

#TODO Read axistream from SUT

#TODO Read string directly from SUT's memory

#TODO Store ILA data into vcd file and send it to console

echo -e "\n[Tester]: Verification successful!\n"

# Generate test.log
echo "Test passed!" > /tmp/test.log
# Send file via UART with Zmodem
sz -e /tmp/test.log
